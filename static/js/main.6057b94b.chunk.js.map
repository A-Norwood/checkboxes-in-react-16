{"version":3,"sources":["Checkbox.js","App.js","index.js"],"names":["Checkbox","_ref","label","isSelected","onCheckboxChange","react_default","a","createElement","className","type","name","checked","onChange","OPTIONS","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleCheckboxChange","changeEvent","target","setState","prevState","checkboxes","objectSpread","defineProperty","handleFormSubmit","formSubmitEvent","preventDefault","keys","state","filter","checkbox","forEach","console","log","createCheckbox","_checkbox","slicedToArray","src_Checkbox","key","createCheckboxes","entries","map","selectAll","selectNone","reduce","options","option","onSubmit","onClick","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6057b94b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Checkbox = ({ label, isSelected, onCheckboxChange }) => (\n  <div className=\"form-check\">\n    <label>\n      <input\n        type=\"checkbox\"\n        name={label}\n        checked={isSelected}\n        onChange={onCheckboxChange}\n        className=\"form-check-input\"\n      />\n      {label}\n    </label>\n  </div>\n);\n\nexport default Checkbox;\n","import React, { Component } from \"react\";\nimport Checkbox from \"./Checkbox\";\n\nconst OPTIONS = [\"One\", \"Two\", \"Three\"];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checkboxes: OPTIONS.reduce(\n        (options, option) => ({\n          ...options,\n          [option]: false\n        }),\n        {}\n      )\n    };\n  }\n\n  handleCheckboxChange = changeEvent => {\n    const { name } = changeEvent.target;\n\n    this.setState(prevState => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [name]: !prevState.checkboxes[name]\n      }\n    }));\n  };\n\n  handleFormSubmit = formSubmitEvent => {\n    formSubmitEvent.preventDefault();\n\n    Object.keys(this.state.checkboxes)\n      .filter(checkbox => this.state.checkboxes[checkbox])\n      .forEach(checkbox => {\n        console.log(checkbox, \"is selected.\");\n      });\n  };\n\n  createCheckbox = checkbox => {\n    const [label, isSelected] = checkbox;\n\n    return (\n      <Checkbox\n        label={label}\n        isSelected={isSelected}\n        onCheckboxChange={this.handleCheckboxChange}\n        key={label}\n      />\n    );\n  };\n\n  createCheckboxes = () =>\n    Object.entries(this.state.checkboxes).map(this.createCheckbox);\n\n  selectAll = () => {\n    Object.keys(this.state.checkboxes).forEach(checkbox => {\n      // BONUS: Can you explain why we pass updater function to setState instead of an object?\n      this.setState(prevState => ({\n        checkboxes: {\n          ...prevState.checkboxes,\n          [checkbox]: true\n        }\n      }));\n    });\n  };\n\n  selectNone = () => {\n    Object.keys(this.state.checkboxes).forEach(checkbox => {\n      // BONUS: Can you explain why we pass updater function to setState instead of an object?\n      this.setState(prevState => ({\n        checkboxes: {\n          ...prevState.checkboxes,\n          [checkbox]: false\n        }\n      }));\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-5\">\n          <div className=\"col-sm-12\">\n            <form onSubmit={this.handleFormSubmit}>\n              {this.createCheckboxes()}\n\n              <div className=\"form-group mt-2\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-primary mr-2\"\n                  onClick={this.selectAll}\n                >\n                  Select All\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-primary mr-2\"\n                  onClick={this.selectNone}\n                >\n                  Select None\n                </button>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Save\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}