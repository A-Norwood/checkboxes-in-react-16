{"version":3,"sources":["components/Checkbox.js","components/App.js","index.js"],"names":["Checkbox","_ref","label","isSelected","onCheckboxChange","react_default","a","createElement","className","type","name","checked","onChange","OPTIONS","App","state","checkboxes","reduce","options","option","Object","objectSpread","defineProperty","handleCheckboxChange","changeEvent","target","_this","setState","prevState","handleFormSubmit","formSubmitEvent","preventDefault","keys","filter","checkbox","forEach","console","log","createCheckbox","components_Checkbox","key","createCheckboxes","map","selectAll","selectNone","onSubmit","this","onClick","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"yNAiBeA,EAfE,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,WAAYC,EAAtBH,EAAsBG,iBAAtB,OACfC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SACEE,KAAK,WACLC,KAAMR,EACNS,QAASR,EACTS,SAAUR,EACVI,UAAU,qBAEXN,KCTDW,EAAU,CAAC,MAAO,MAAO,SAwGhBC,6MArGbC,MAAQ,CACNC,WAAYH,EAAQI,OAClB,SAACC,EAASC,GAAV,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GACKF,EADLE,OAAAE,EAAA,EAAAF,CAAA,GAEGD,GAAS,KAEZ,OAIJI,qBAAuB,SAAAC,GAAe,IAC5Bd,EAASc,EAAYC,OAArBf,KAERgB,EAAKC,SAAS,SAAAC,GAAS,MAAK,CAC1BZ,WAAWI,OAAAC,EAAA,EAAAD,CAAA,GACNQ,EAAUZ,WADLI,OAAAE,EAAA,EAAAF,CAAA,GAEPV,GAAQkB,EAAUZ,WAAWN,WAKpCmB,iBAAmB,SAAAC,GACjBA,EAAgBC,iBAEhBX,OAAOY,KAAKN,EAAKX,MAAMC,YACpBiB,OAAO,SAAAC,GAAQ,OAAIR,EAAKX,MAAMC,WAAWkB,KACzCC,QAAQ,SAAAD,GACPE,QAAQC,IAAIH,EAAU,qBAI5BI,eAAiB,SAAAnB,GAAM,OACrBd,EAAAC,EAAAC,cAACgC,EAAD,CACErC,MAAOiB,EACPhB,WAAYuB,EAAKX,MAAMC,WAAWG,GAClCf,iBAAkBsB,EAAKH,qBACvBiB,IAAKrB,OAITsB,iBAAmB,kBAAM5B,EAAQ6B,IAAIhB,EAAKY,mBAE1CK,UAAY,WACVvB,OAAOY,KAAKN,EAAKX,MAAMC,YAAYmB,QAAQ,SAAAD,GAEzCR,EAAKC,SAAS,SAAAC,GAAS,MAAK,CAC1BZ,WAAWI,OAAAC,EAAA,EAAAD,CAAA,GACNQ,EAAUZ,WADLI,OAAAE,EAAA,EAAAF,CAAA,GAEPc,GAAW,YAMpBU,WAAa,WACXxB,OAAOY,KAAKN,EAAKX,MAAMC,YAAYmB,QAAQ,SAAAD,GAEzCR,EAAKC,SAAS,SAAAC,GAAS,MAAK,CAC1BZ,WAAWI,OAAAC,EAAA,EAAAD,CAAA,GACNQ,EAAUZ,WADLI,OAAAE,EAAA,EAAAF,CAAA,GAEPc,GAAW,kFAOlB,OACE7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMsC,SAAUC,KAAKjB,kBAClBiB,KAAKL,mBAENpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,UACEE,KAAK,SACLD,UAAU,+BACVuC,QAASD,KAAKH,WAHhB,cAOAtC,EAAAC,EAAAC,cAAA,UACEE,KAAK,SACLD,UAAU,+BACVuC,QAASD,KAAKF,YAHhB,eAOAvC,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASD,UAAU,mBAAhC,oBA1FEwC,aCDlBC,IAASC,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.843340da.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Checkbox = ({ label, isSelected, onCheckboxChange }) => (\n  <div className=\"form-check\">\n    <label>\n      <input\n        type=\"checkbox\"\n        name={label}\n        checked={isSelected}\n        onChange={onCheckboxChange}\n        className=\"form-check-input\"\n      />\n      {label}\n    </label>\n  </div>\n);\n\nexport default Checkbox;\n","import React, { Component } from \"react\";\nimport Checkbox from \"./Checkbox\";\n\nconst OPTIONS = [\"One\", \"Two\", \"Three\"];\n\nclass App extends Component {\n  state = {\n    checkboxes: OPTIONS.reduce(\n      (options, option) => ({\n        ...options,\n        [option]: false\n      }),\n      {}\n    )\n  };\n\n  handleCheckboxChange = changeEvent => {\n    const { name } = changeEvent.target;\n\n    this.setState(prevState => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [name]: !prevState.checkboxes[name]\n      }\n    }));\n  };\n\n  handleFormSubmit = formSubmitEvent => {\n    formSubmitEvent.preventDefault();\n\n    Object.keys(this.state.checkboxes)\n      .filter(checkbox => this.state.checkboxes[checkbox])\n      .forEach(checkbox => {\n        console.log(checkbox, \"is selected.\");\n      });\n  };\n\n  createCheckbox = option => (\n    <Checkbox\n      label={option}\n      isSelected={this.state.checkboxes[option]}\n      onCheckboxChange={this.handleCheckboxChange}\n      key={option}\n    />\n  );\n\n  createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n\n  selectAll = () => {\n    Object.keys(this.state.checkboxes).forEach(checkbox => {\n      // BONUS: Can you explain why we pass updater function to setState instead of an object?\n      this.setState(prevState => ({\n        checkboxes: {\n          ...prevState.checkboxes,\n          [checkbox]: true\n        }\n      }));\n    });\n  };\n\n  selectNone = () => {\n    Object.keys(this.state.checkboxes).forEach(checkbox => {\n      // BONUS: Can you explain why we pass updater function to setState instead of an object?\n      this.setState(prevState => ({\n        checkboxes: {\n          ...prevState.checkboxes,\n          [checkbox]: false\n        }\n      }));\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-5\">\n          <div className=\"col-sm-12\">\n            <form onSubmit={this.handleFormSubmit}>\n              {this.createCheckboxes()}\n\n              <div className=\"form-group mt-2\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-primary mr-2\"\n                  onClick={this.selectAll}\n                >\n                  Select All\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-primary mr-2\"\n                  onClick={this.selectNone}\n                >\n                  Select None\n                </button>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Save\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}